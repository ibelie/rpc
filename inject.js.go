// Copyright 2017 ibelie, Chen Jie, Joungtao. All rights reserved.
// Use of this source code is governed by The MIT License
// that can be found in the LICENSE file.

package rpc

import (
	"bytes"
	"fmt"
	"path"

	"io/ioutil"
)

func injectJavascript(dir string, entities []*Entity) {
	var buffer bytes.Buffer

	buffer.Write([]byte(fmt.Sprintf(`// Generated by ibelie-rpc.  DO NOT EDIT!

goog.provide('Entity');

goog.require('tyts.ProtoBuf');
goog.require('tyts.SizeVarint');

Entity = function() {
	this.__class__ = 'Entity';
	this.isAwake = false;
	this.RUID = 0;
	this.Key  = 0;
	this.Type = 0;
};

Entity.prototype.Awake = function() {
};

Entity.prototype.Sleep = function() {
};

Entity.prototype.ByteSize = function() {
	return tyts.SizeVarint(this.RUID) + tyts.SizeVarint(this.Key) + tyts.SizeVarint(this.Type);
};

Entity.prototype.Serialize = function() {
	var protobuf = new tyts.ProtoBuf(new Uint8Array(this.ByteSize()));
	protobuf.WriteVarint(this.RUID);
	protobuf.WriteVarint(this.Key);
	protobuf.WriteVarint(this.Type);
	return protobuf.buffer;
};

Entity.prototype.Deserialize = function(data) {
	this.RUID = protobuf.ReadVarint();
	this.Key  = protobuf.ReadVarint();
	this.Type = protobuf.ReadVarint();
};

var ibelie = {};
ibelie.rpc = {};
ibelie.rpc.Entity = Entity;
ibelie.rpc.Component = function(entity) {
	this.Entity = entity;
};

ibelie.rpc.Connection = function(url) {
	var conn = this;
	var socket = new WebSocket(url);
	socket.onopen = function (event) {
		socket.onmessage = function(event) {
			console.warn('[Connection] Socket has been closed:', event, conn);
		};
		socket.onclose = function(event) {
			console.warn('[Connection] handler:', event, conn);
		};
	};
	this.socket = socket;
	this.entities = {};
};

ibelie.rpc.Connection.prototype.disconnect = function() {
	this.socket.close();
};
`)))

	ioutil.WriteFile(path.Join(dir, "rpc.js"), buffer.Bytes(), 0666)
}
